import java.time.ZonedDateTime
import java.time.format.DateTimeFormatter

plugins {
  id 'com.vanniktech.maven.publish' version '0.25.1' apply false
  id 'com.github.ben-manes.versions' version '0.46.0'
  id 'java-library'
}

subprojects {
  tasks.withType(Jar).configureEach {
    def dateFile = new File(buildDir, 'jar-manifest-date.txt')
    if (!dateFile.exists()) {
      def date = DateTimeFormatter.ofPattern('EEE MMM dd HH:mm:ss zzz yyyy').
        format(ZonedDateTime.now())
      dateFile.parentFile.mkdirs()
      dateFile.text = date.trim()
    }

    manifest {
      attributes(
        'Created-By': POM_DEVELOPER_NAME,
        'Implementation-Title': POM_NAME,
        'Implementation-Version': VERSION_NAME,
        'Implementation-Vendor': POM_DEVELOPER_NAME,
        'Built-By': System.getProperty('user.name'),
        'Built-Date': dateFile.text.trim(),
        'Built-JDK': System.getProperty('java.version'),
        'Built-Gradle': gradle.gradleVersion)
    }
  }

  tasks.withType(JavaCompile).configureEach {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    configure(options) {
      compilerArgs << '-Xlint:all'
      compilerArgs << '-Xlint:-options'
      encoding = 'utf-8'
    }
  }

  tasks.withType(Test).configureEach {
    testLogging {
      exceptionFormat 'full'
      showCauses true
      showExceptions true
      showStackTraces true
      events 'failed', 'skipped'
    }
  }
}
